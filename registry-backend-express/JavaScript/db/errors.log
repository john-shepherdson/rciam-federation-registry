

16:47:51 error: invalid input syntax for integer: "NaN"
         tx(add-client): SELECT protocol FROM service_details WHERE id = 'NaN' AND requester= '4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu' and deleted=FALSE

16:48:53 error: invalid input syntax for integer: "NaN"
         tx(add-client): SELECT protocol FROM service_details WHERE id = 'NaN' AND requester= '4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu' and deleted=FALSE

11:55:33 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1","service_id":0,"petition_id":0}

11:58:37 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1","service_id":0,"petition_id":0}

11:58:37 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1e","service_id":0,"petition_id":0}

11:58:37 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1e","service_id":0,"petition_id":0}

11:58:37 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1es","service_id":0,"petition_id":0}

11:58:37 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1es","service_id":0,"petition_id":0}

11:58:37 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1esf","service_id":0,"petition_id":0}

11:58:40 error: Property 'entity_id' doesn't exist.
         task(check-entity_id-exists): SELECT t1.id as service_id FROM (SELECT id FROM service_details_saml WHERE entity_id=${entity_id} and id!=${service_id}) as t1 JOIN (SELECT id FROM service_details WHERE deleted = false) as t2 USING (id) UNION SELECT t1.id as petition_id FROM (SELECT id FROM service_petition_details_saml WHERE entity_id=${entity_id} and id!=${petition_id}) as t1 JOIN ( SELECT id FROM service_petition_details WHERE reviewed_at IS NULL) as t2 USING (id)
         params: {"client_id":"saml-id-1esf","service_id":0,"petition_id":0}

13:16:47 error: syntax error at or near ")"
         task(find-service-data): SELECT json_build_object('service_name', sd.service_name,'service_description',sd.service_description, 'logo_uri',sd.logo_uri,'policy_uri',sd.policy_uri,'integration_environment',sd.integration_environment, 'client_id',sd.client_id,'allow_introspection',sd.allow_introspection,'code_challenge_method',sd.code_challenge_method, 'device_code_validity_seconds',sd.device_code_validity_seconds,'access_token_validity_seconds',sd.access_token_validity_seconds, 'refresh_token_validity_seconds',sd.refresh_token_validity_seconds,'refresh_token_validity_seconds',sd.refresh_token_validity_seconds, 'client_secret',sd.client_secret,'reuse_refresh_tokens',sd.reuse_refresh_tokens,'protocol',sd.protocol, 'clear_access_tokens_on_refresh',sd.clear_access_tokens_on_refresh,'id_token_timeout_seconds',sd.id_token_timeout_seconds,'metadata_url',sd.metadata_url ,'entity_id',sd.entity_id,  'grant_types', (SELECT json_agg((v.value)) FROM service_oidc_grant_types v WHERE sd.id = v.owner_id), 'scope', (SELECT json_agg((v.value)) FROM service_oidc_scopes v WHERE sd.id = v.owner_id), 'redirect_uris', (SELECT json_agg((v.value)) FROM service_oidc_redirect_uris v WHERE sd.id = v.owner_id), 'contacts', (SELECT json_agg(json_build_object('email',v.value,'type',v.type)) FROM service_contacts v WHERE sd.id = v.owner_id) ) json FROM (SELECT * FROM (SELECT * FROM service_details WHERE id=1) AS foo LEFT JOIN service_details_oidc USING (id)) as sd1 LEFT JOIN service_details_saml USING (id)) as sd

13:18:02 error: syntax error at or near ")"
         task(find-service-data): SELECT json_build_object('service_name', sd.service_name,'service_description',sd.service_description, 'logo_uri',sd.logo_uri,'policy_uri',sd.policy_uri,'integration_environment',sd.integration_environment, 'client_id',sd.client_id,'allow_introspection',sd.allow_introspection,'code_challenge_method',sd.code_challenge_method, 'device_code_validity_seconds',sd.device_code_validity_seconds,'access_token_validity_seconds',sd.access_token_validity_seconds, 'refresh_token_validity_seconds',sd.refresh_token_validity_seconds,'refresh_token_validity_seconds',sd.refresh_token_validity_seconds, 'client_secret',sd.client_secret,'reuse_refresh_tokens',sd.reuse_refresh_tokens,'protocol',sd.protocol, 'clear_access_tokens_on_refresh',sd.clear_access_tokens_on_refresh,'id_token_timeout_seconds',sd.id_token_timeout_seconds,'metadata_url',sd.metadata_url ,'entity_id',sd.entity_id,  'grant_types', (SELECT json_agg((v.value)) FROM service_oidc_grant_types v WHERE sd.id = v.owner_id), 'scope', (SELECT json_agg((v.value)) FROM service_oidc_scopes v WHERE sd.id = v.owner_id), 'redirect_uris', (SELECT json_agg((v.value)) FROM service_oidc_redirect_uris v WHERE sd.id = v.owner_id), 'contacts', (SELECT json_agg(json_build_object('email',v.value,'type',v.type)) FROM service_contacts v WHERE sd.id = v.owner_id) ) json FROM (SELECT * FROM (SELECT * FROM service_details WHERE id=1) AS foo LEFT JOIN service_details_oidc USING (id)) as sd1 LEFT JOIN service_details_saml USING (id)) as sd

13:19:59 error: syntax error at or near "as"
         task(find-service-data): SELECT json_build_object('service_name', sd.service_name,'service_description',sd.service_description, 'logo_uri',sd.logo_uri,'policy_uri',sd.policy_uri,'integration_environment',sd.integration_environment, 'client_id',sd.client_id,'allow_introspection',sd.allow_introspection,'code_challenge_method',sd.code_challenge_method, 'device_code_validity_seconds',sd.device_code_validity_seconds,'access_token_validity_seconds',sd.access_token_validity_seconds, 'refresh_token_validity_seconds',sd.refresh_token_validity_seconds,'refresh_token_validity_seconds',sd.refresh_token_validity_seconds, 'client_secret',sd.client_secret,'reuse_refresh_tokens',sd.reuse_refresh_tokens,'protocol',sd.protocol, 'clear_access_tokens_on_refresh',sd.clear_access_tokens_on_refresh,'id_token_timeout_seconds',sd.id_token_timeout_seconds,'metadata_url',sd.metadata_url ,'entity_id',sd.entity_id,  'grant_types', (SELECT json_agg((v.value)) FROM service_oidc_grant_types v WHERE sd.id = v.owner_id), 'scope', (SELECT json_agg((v.value)) FROM service_oidc_scopes v WHERE sd.id = v.owner_id), 'redirect_uris', (SELECT json_agg((v.value)) FROM service_oidc_redirect_uris v WHERE sd.id = v.owner_id), 'contacts', (SELECT json_agg(json_build_object('email',v.value,'type',v.type)) FROM service_contacts v WHERE sd.id = v.owner_id) ) json FROM (SELECT * FROM (SELECT * FROM service_details WHERE id=3) AS foo LEFT JOIN service_details_oidc USING (id) as sd1 LEFT JOIN service_details_saml USING (id)) as sd

13:19:59 error: syntax error at or near "as"
         task(find-petition-data): SELECT json_build_object('service_name', sd.service_name,'service_description',sd.service_description, 'logo_uri',sd.logo_uri,'policy_uri',sd.policy_uri,'integration_environment',sd.integration_environment, 'client_id',sd.client_id,'allow_introspection',sd.allow_introspection,'code_challenge_method',sd.code_challenge_method, 'device_code_validity_seconds',sd.device_code_validity_seconds,'access_token_validity_seconds',sd.access_token_validity_seconds, 'refresh_token_validity_seconds',sd.refresh_token_validity_seconds,'refresh_token_validity_seconds',sd.refresh_token_validity_seconds, 'client_secret',sd.client_secret,'reuse_refresh_tokens',sd.reuse_refresh_tokens,'protocol',sd.protocol, 'clear_access_tokens_on_refresh',sd.clear_access_tokens_on_refresh,'id_token_timeout_seconds',sd.id_token_timeout_seconds,'metadata_url',sd.metadata_url ,'entity_id',sd.entity_id, 'requester',sd.requester,'service_id',sd.service_id,'type',sd.type, 'grant_types', (SELECT json_agg((v.value)) FROM service_petition_oidc_grant_types v WHERE sd.id = v.owner_id), 'scope', (SELECT json_agg((v.value)) FROM service_petition_oidc_scopes v WHERE sd.id = v.owner_id), 'redirect_uris', (SELECT json_agg((v.value)) FROM service_petition_oidc_redirect_uris v WHERE sd.id = v.owner_id), 'contacts', (SELECT json_agg(json_build_object('email',v.value,'type',v.type)) FROM service_petition_contacts v WHERE sd.id = v.owner_id) ) json FROM (SELECT * FROM (SELECT * FROM service_petition_details WHERE id=6) AS foo LEFT JOIN service_petition_details_oidc USING (id) as sd1 LEFT JOIN service_petition_details_saml USING (id)) as sd

17:26:07 error: invalid input syntax for integer: "NaN"
         tx(approve-petition): SELECT json_build_object('service_name', sd.service_name,'service_description',sd.service_description, 'logo_uri',sd.logo_uri,'policy_uri',sd.policy_uri,'integration_environment',sd.integration_environment, 'client_id',sd.client_id,'allow_introspection',sd.allow_introspection,'code_challenge_method',sd.code_challenge_method, 'device_code_validity_seconds',sd.device_code_validity_seconds,'access_token_validity_seconds',sd.access_token_validity_seconds, 'refresh_token_validity_seconds',sd.refresh_token_validity_seconds,'refresh_token_validity_seconds',sd.refresh_token_validity_seconds, 'client_secret',sd.client_secret,'reuse_refresh_tokens',sd.reuse_refresh_tokens,'protocol',sd.protocol, 'clear_access_tokens_on_refresh',sd.clear_access_tokens_on_refresh,'id_token_timeout_seconds',sd.id_token_timeout_seconds,'metadata_url',sd.metadata_url ,'entity_id',sd.entity_id, 'requester',sd.requester,'service_id',sd.service_id,'type',sd.type, 'grant_types', (SELECT json_agg((v.value)) FROM service_petition_oidc_grant_types v WHERE sd.id = v.owner_id), 'scope', (SELECT json_agg((v.value)) FROM service_petition_oidc_scopes v WHERE sd.id = v.owner_id), 'redirect_uris', (SELECT json_agg((v.value)) FROM service_petition_oidc_redirect_uris v WHERE sd.id = v.owner_id), 'contacts', (SELECT json_agg(json_build_object('email',v.value,'type',v.type)) FROM service_petition_contacts v WHERE sd.id = v.owner_id) ) json FROM (SELECT * FROM (SELECT * FROM service_petition_details WHERE id='NaN') AS foo LEFT JOIN service_petition_details_oidc USING (id) LEFT JOIN service_petition_details_saml USING (id)) as sd