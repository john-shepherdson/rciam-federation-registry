

12:39:46 error: invalid input syntax for type integer: "NaN"
         query: SELECT json_build_object('service_name', sd.service_name,'service_description',sd.service_description, 'logo_uri',sd.logo_uri,'policy_uri',sd.policy_uri,'integration_environment',sd.integration_environment, 'client_id',sd.client_id,'allow_introspection',sd.allow_introspection,'code_challenge_method',sd.code_challenge_method, 'device_code_validity_seconds',sd.device_code_validity_seconds,'access_token_validity_seconds',sd.access_token_validity_seconds, 'refresh_token_validity_seconds',sd.refresh_token_validity_seconds,'refresh_token_validity_seconds',sd.refresh_token_validity_seconds, 'client_secret',sd.client_secret,'reuse_refresh_tokens',sd.reuse_refresh_tokens,'protocol',sd.protocol,'jwks',sd.jwks,'jwks_uri',sd.jwks_uri, 'country',sd.country,'token_endpoint_auth_method',sd.token_endpoint_auth_method,'token_endpoint_auth_signing_alg',sd.token_endpoint_auth_signing_alg, 'clear_access_tokens_on_refresh',sd.clear_access_tokens_on_refresh,'id_token_timeout_seconds',sd.id_token_timeout_seconds,'metadata_url',sd.metadata_url ,'entity_id',sd.entity_id, 'grant_types', (SELECT CASE WHEN array_agg((v.value)) IS NULL THEN Array[]::varchar[] ELSE array_agg((v.value)) END FROM service_oidc_grant_types v WHERE sd.id = v.owner_id), 'scope', (SELECT CASE WHEN array_agg((v.value)) IS NULL THEN Array[]::varchar[] ELSE array_agg((v.value)) END FROM service_oidc_scopes v WHERE sd.id = v.owner_id), 'redirect_uris', (SELECT CASE WHEN array_agg((v.value)) IS NULL THEN Array[]::varchar[] ELSE array_agg((v.value)) END FROM service_oidc_redirect_uris v WHERE sd.id = v.owner_id), 'contacts', (SELECT CASE WHEN array_agg(json_build_object('email',v.value,'type',v.type)) IS NULL THEN Array[]::json[] ELSE array_agg(json_build_object('email',v.value,'type',v.type)) END FROM service_contacts v WHERE sd.id = v.owner_id) ) json FROM (SELECT * FROM (SELECT * FROM service_details WHERE id='NaN' AND deleted = FALSE AND tenant='egi') AS foo LEFT JOIN service_details_oidc USING (id) LEFT JOIN service_details_saml USING (id)) as sd

16:57:14 error: column "intergration_environment" does not exist
         query: SELECT intergration_environment as result FROM (SELECT petition.group_id,service_details.group_id as s_group_id FROM (SELECT service_id,group_id,integration_environment FROM service_petition_details WHERE id=19 AND reviewed_at IS NULL) as petition LEFT JOIN service_details ON service_details.id = petition.service_id) as petition LEFT JOIN group_subs ON (group_subs.group_id=petition.group_id OR group_subs.group_id=petition.s_group_id) AND sub='4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu' WHERE sub IS NOT NULL;

16:58:52 error: column "integration_environment" does not exist
         query: SELECT integration_environment as result FROM (SELECT petition.group_id,service_details.group_id as s_group_id FROM (SELECT service_id,group_id,integration_environment FROM service_petition_details WHERE id=19 AND reviewed_at IS NULL) as petition LEFT JOIN service_details ON service_details.id = petition.service_id) as petition LEFT JOIN group_subs ON (group_subs.group_id=petition.group_id OR group_subs.group_id=petition.s_group_id) AND sub='4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu' WHERE sub IS NOT NULL;

17:06:22 error: column reference "integration_environment" is ambiguous
         query: SELECT integration_environment as result FROM (SELECT petition.group_id,service_details.group_id as s_group_id,integration_environment FROM (SELECT service_id,group_id,integration_environment FROM service_petition_details WHERE id=19 AND reviewed_at IS NULL) as petition LEFT JOIN service_details ON service_details.id = petition.service_id) as petition LEFT JOIN group_subs ON (group_subs.group_id=petition.group_id OR group_subs.group_id=petition.s_group_id) AND sub='4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu' WHERE sub IS NOT NULL;

01:14:00 error: the database system is shutting down
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

01:14:00 error: the database system is shutting down
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

00:00:15 error: terminating connection due to administrator command
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

00:00:15 error: terminating connection due to administrator command
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

01:24:06 error: terminating connection due to administrator command
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

01:24:06 error: terminating connection due to administrator command
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

16:02:20 error: the database system is shutting down
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

16:02:20 error: the database system is shutting down
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

12:02:58 error: relation "service_petition_coc" does not exist
         tx(add-service): insert into "service_petition_coc"("petition_id","name","value") values(16,'egi_policy',null),(16,'egi_policy2',null)

12:02:58 error: current transaction is aborted, commands ignored until end of transaction block
         tx(add-service): insert into "service_petition_oidc_grant_types"("owner_id","value") values(16,'urn:ietf:params:oauth:grant-type:device_code')

12:02:58 error: current transaction is aborted, commands ignored until end of transaction block
         tx(add-service): insert into "service_petition_oidc_scopes"("owner_id","value") values(16,'openid'),(16,'profile'),(16,'email'),(16,'eduperson_entitlement'),(16,'eduperson_scoped_affiliation'),(16,'eduperson_unique_id')

12:10:38 error: column v.service_id does not exist
         task(find-petition-data): SELECT json_build_object('service_name', sd.service_name,'service_description',sd.service_description, 'logo_uri',sd.logo_uri,'policy_uri',sd.policy_uri,'integration_environment',sd.integration_environment, 'client_id',sd.client_id,'allow_introspection',sd.allow_introspection,'code_challenge_method',sd.code_challenge_method, 'device_code_validity_seconds',sd.device_code_validity_seconds,'access_token_validity_seconds',sd.access_token_validity_seconds, 'refresh_token_validity_seconds',sd.refresh_token_validity_seconds,'refresh_token_validity_seconds',sd.refresh_token_validity_seconds, 'client_secret',sd.client_secret,'reuse_refresh_tokens',sd.reuse_refresh_tokens,'protocol',sd.protocol,'jwks',sd.jwks,'jwks_uri',sd.jwks_uri, 'country',sd.country,'website_url',sd.website_url,'token_endpoint_auth_method',sd.token_endpoint_auth_method,'token_endpoint_auth_signing_alg',sd.token_endpoint_auth_signing_alg, 'clear_access_tokens_on_refresh',sd.clear_access_tokens_on_refresh,'id_token_timeout_seconds',sd.id_token_timeout_seconds,'metadata_url',sd.metadata_url ,'entity_id',sd.entity_id,'group_id',sd.group_id, 'requester',sd.requester,'service_id',sd.service_id,'type',sd.type, 'coc',(SELECT CASE WHEN json_agg(json_build_object(v.name,v.value)) IS NULL THEN NULL ELSE json_agg(json_build_object(v.name,v.value)) END FROM service_petition_coc v WHERE sd.id = v.service_id), 'grant_types', (SELECT json_agg((v.value)) FROM service_petition_oidc_grant_types v WHERE sd.id = v.owner_id), 'scope', (SELECT json_agg((v.value)) FROM service_petition_oidc_scopes v WHERE sd.id = v.owner_id), 'redirect_uris', (SELECT json_agg((v.value)) FROM service_petition_oidc_redirect_uris v WHERE sd.id = v.owner_id), 'contacts', (SELECT json_agg(json_build_object('email',v.value,'type',v.type)) FROM service_petition_contacts v WHERE sd.id = v.owner_id) ) json FROM (SELECT * FROM (SELECT * FROM service_petition_details WHERE id=17 AND reviewed_at IS NULL AND tenant='egi') AS foo LEFT JOIN service_petition_details_oidc USING (id) LEFT JOIN service_petition_details_saml USING (id)) as sd

13:50:49 error: column v.service_id does not exist
         tx(update-service): update "service_petition_coc" as t set "value"=v."value" from (values('17','egi_policy',false),('17','egi_policy2',true)) as v("petition_id","name","value") WHERE v.service_id = t.service_id and v.name = t.name RETURNING t.id

13:50:49 error: current transaction is aborted, commands ignored until end of transaction block
         tx(update-service): UPDATE service_petition_details SET service_description='asdasd',service_name='sadasd',logo_uri='',integration_environment='demo',protocol='oidc',type='create',comment=null,country='ar',website_url='',last_edited=current_timestamp WHERE id='17'

13:50:49 error: current transaction is aborted, commands ignored until end of transaction block
         tx(update-service): UPDATE service_petition_details_oidc SET reuse_refresh_tokens=true,allow_introspection=false,client_id='',client_secret='E91178AC29E70778',access_token_validity_seconds=3600,refresh_token_validity_seconds=28800,clear_access_tokens_on_refresh=true, code_challenge_method='S256',device_code_validity_seconds=1800,id_token_timeout_seconds=600,jwks=null,jwks_uri=null,token_endpoint_auth_method='client_secret_basic',token_endpoint_auth_signing_alg='' WHERE id=17

13:53:14 error: operator does not exist: text = integer
         tx(update-service): update "service_petition_coc" as t set "value"=v."value" from (values('17','egi_policy',false),('17','egi_policy2',true)) as v("petition_id","name","value") WHERE v.petition_id =t.petition_id and v.name = t.name RETURNING t.id

13:53:14 error: current transaction is aborted, commands ignored until end of transaction block
         tx(update-service): UPDATE service_petition_details SET service_description='asdasd',service_name='sadasd',logo_uri='',integration_environment='demo',protocol='oidc',type='create',comment=null,country='ar',website_url='',last_edited=current_timestamp WHERE id='17'

13:53:14 error: current transaction is aborted, commands ignored until end of transaction block
         tx(update-service): UPDATE service_petition_details_oidc SET reuse_refresh_tokens=true,allow_introspection=false,client_id='',client_secret='E91178AC29E70778',access_token_validity_seconds=3600,refresh_token_validity_seconds=28800,clear_access_tokens_on_refresh=true, code_challenge_method='S256',device_code_validity_seconds=1800,id_token_timeout_seconds=600,jwks=null,jwks_uri=null,token_endpoint_auth_method='client_secret_basic',token_endpoint_auth_signing_alg='' WHERE id=17

14:16:57 error: relation "service_petition_coc" does not exist
         tx(add-service): insert into "service_petition_coc"("petition_id","name","value") values(13,'egi_policy',true),(13,'egi_policy2',false)

14:16:57 error: current transaction is aborted, commands ignored until end of transaction block
         tx(add-service): insert into "service_petition_oidc_grant_types"("owner_id","value") values(13,'client_credentials')

14:16:57 error: current transaction is aborted, commands ignored until end of transaction block
         tx(add-service): insert into "service_petition_oidc_scopes"("owner_id","value") values(13,'openid'),(13,'profile'),(13,'email'),(13,'eduperson_entitlement'),(13,'eduperson_scoped_affiliation'),(13,'eduperson_unique_id')

14:21:44 error: operator does not exist: text = bigint
         tx(update-service): update "service_petition_coc" as t set "value"=v."value" from (values('13','egi_policy',false),('13','egi_policy2',true)) as v("petition_id","name","value") WHERE v.petition_id =t.petition_id and v.name = t.name RETURNING t.id

14:21:44 error: current transaction is aborted, commands ignored until end of transaction block
         tx(update-service): UPDATE service_petition_details SET service_description='Test',service_name='Test',logo_uri='',integration_environment='demo',protocol='oidc',type='create',comment=null,country='ax',website_url='',last_edited=current_timestamp WHERE id='13'

14:21:44 error: current transaction is aborted, commands ignored until end of transaction block
         tx(update-service): UPDATE service_petition_details_oidc SET reuse_refresh_tokens=true,allow_introspection=false,client_id='',client_secret='0127CBBF5AFBF3C8',access_token_validity_seconds=3600,refresh_token_validity_seconds=28800,clear_access_tokens_on_refresh=true, code_challenge_method='S256',device_code_validity_seconds=1800,id_token_timeout_seconds=600,jwks=null,jwks_uri=null,token_endpoint_auth_method='client_secret_basic',token_endpoint_auth_signing_alg='' WHERE id=13

14:23:57 error: No return data was expected.
         tx(update-service): update "service_petition_coc" as t set "value"=v."value" from (values(13,'egi_policy',false),(13,'egi_policy2',true)) as v("petition_id","name","value") WHERE v.petition_id =t.petition_id and v.name = t.name RETURNING t.id

20:08:19 error: terminating connection due to administrator command
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

20:08:19 error: terminating connection due to administrator command
         connection: {"host":"localhost","port":5432,"database":"service_registry_db","user":"postgres","password":"########"}

15:54:17 error: cannot determine type of empty array
         tx(request-review-petition): SELECT DISTINCT email,name FROM ((SELECT user_id FROM user_edu_person_entitlement WHERE edu_person_entitlement = ANY(ARRAY[])) as ent LEFT JOIN user_info on ent.user_id = user_info.id)

16:10:16 error: cannot determine type of empty array
         tx(request-review-petition): SELECT DISTINCT email,name FROM ((SELECT user_id FROM user_edu_person_entitlement WHERE edu_person_entitlement = ANY(ARRAY[])) as ent LEFT JOIN user_info on ent.user_id = user_info.id)

16:11:46 error: cannot determine type of empty array
         tx(request-review-petition): SELECT DISTINCT email,name FROM ((SELECT user_id FROM user_edu_person_entitlement WHERE edu_person_entitlement = ANY(ARRAY[])) as ent LEFT JOIN user_info on ent.user_id = user_info.id)

19:18:04 error: subquery in FROM must have an alias
         tx(user-check): SELECT petition.protocol,type,service_id,group_subs.sub FROM (SELECT protocol,type,service_id FROM service_petition_details WHERE id=13 AND reviewed_at IS NULL AND tenant='egi') AND status!='request_review' as petition LEFT JOIN service_details ON petition.service_id=service_details.id LEFT JOIN group_subs USING (group_id) WHERE sub='4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu' UNION SELECT petition.protocol,type,service_id,group_subs.sub FROM (SELECT protocol,type,service_id,group_id FROM service_petition_details WHERE id=13 AND reviewed_at IS NULL AND tenant='egi') AND status!='request_review' as petition LEFT JOIN group_subs USING (group_id) WHERE sub='4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu'

19:19:03 error: subquery in FROM must have an alias
         tx(user-check): SELECT petition.protocol,type,service_id,group_subs.sub FROM (SELECT protocol,type,service_id FROM service_petition_details WHERE id=13 AND reviewed_at IS NULL AND tenant='egi') AND status!='request_review' as petition LEFT JOIN service_details ON petition.service_id=service_details.id LEFT JOIN group_subs USING (group_id) WHERE sub='4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu' UNION SELECT petition.protocol,type,service_id,group_subs.sub FROM (SELECT protocol,type,service_id,group_id FROM service_petition_details WHERE id=13 AND reviewed_at IS NULL AND tenant='egi') AND status!='request_review' as petition LEFT JOIN group_subs USING (group_id) WHERE sub='4359841657275796f20734f26d7b60c515f17cd36bad58d29ed87d000d621974@egi.eu'

14:48:11 error: operator does not exist: character varying === unknown
         query: SELECT json_agg(json_build_object('outdated',foo.outdated,'service_id',foo.service_id,'petition_id',foo.petition_id,'service_name',foo.service_name,'service_description',foo.service_description,'logo_uri',foo.logo_uri,'integration_environment',foo.integration_environment,'owned',foo.owned,'status',foo.status,'type',foo.type,'state',foo.state,'group_manager',foo.group_manager,'notification',foo.notification,'comment',foo.comment,'group_id',foo.group_id,'deployment_type',foo.deployment_type,'last_edited',foo.last_edited)) as list_items, full_count,outdated_count FROM ( SELECT *,COUNT(*) OVER() As full_count,COUNT(case when outdated=true AND petition_id IS NULL AND bar.owned then 1 else null end ) OVER() as outdated_count,COUNT(case when status==='request_review' then 1 else null end ) as request_review_count FROM ( SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN owned IS NULL THEN false ELSE owned END,status,type,state,CASE WHEN group_manager IS NULL then false ELSE group_manager END,CASE WHEN notification IS NULL THEN false ELSE notification END AS notification,comment,group_id,deployment_type,CASE WHEN petitions.last_edited IS NOT NULL THEN petitions.last_edited ELSE service_state.last_edited END,outdated FROM  (SELECT id AS service_id,service_description,logo_uri,service_name,deleted,requester,integration_environment,group_id FROM service_details WHERE tenant='egi'   ) AS service_details LEFT JOIN (SELECT id AS group_id,true AS owned,CASE WHEN group_manager IS NULL then false ELSE group_manager END FROM groups LEFT JOIN group_subs ON groups.id=group_subs.group_id WHERE sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu') AS group_ids USING (group_id) RIGHT JOIN service_state as service_state ON service_details.service_id=service_state.id  LEFT JOIN (SELECT id AS petition_id,status,type, service_id,comment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,last_edited FROM service_petition_details WHERE reviewed_at IS NULL) AS petitions USING (service_id) WHERE deleted=false  UNION SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu' THEN true ELSE false END AS owned,status,type,state,CASE WHEN group_manager IS NULL THEN false ELSE group_manager END,notification,comment,petitions.group_id,deployment_type,last_edited,outdated FROM (SELECT service_id,id AS petition_id,comment,service_description,logo_uri,service_name,integration_environment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,status,type,null AS deployment_type,null AS state,group_id,last_edited,false as outdated FROM service_petition_details WHERE reviewed_at IS NULL AND type='create' AND tenant='egi'    ) as petitions LEFT JOIN group_subs ON petitions.group_id= group_subs.group_id AND group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu'  ) as bar ORDER BY last_edited DESC LIMIT 10 OFFSET 0 ) AS foo GrOup By full_count,outdated_count

14:48:17 error: operator does not exist: character varying === unknown
         query: SELECT json_agg(json_build_object('outdated',foo.outdated,'service_id',foo.service_id,'petition_id',foo.petition_id,'service_name',foo.service_name,'service_description',foo.service_description,'logo_uri',foo.logo_uri,'integration_environment',foo.integration_environment,'owned',foo.owned,'status',foo.status,'type',foo.type,'state',foo.state,'group_manager',foo.group_manager,'notification',foo.notification,'comment',foo.comment,'group_id',foo.group_id,'deployment_type',foo.deployment_type,'last_edited',foo.last_edited)) as list_items, full_count,outdated_count FROM ( SELECT *,COUNT(*) OVER() As full_count,COUNT(case when outdated=true AND petition_id IS NULL AND bar.owned then 1 else null end ) OVER() as outdated_count,COUNT(case when status==='request_review' then 1 else null end ) as request_review_count FROM ( SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN owned IS NULL THEN false ELSE owned END,status,type,state,CASE WHEN group_manager IS NULL then false ELSE group_manager END,CASE WHEN notification IS NULL THEN false ELSE notification END AS notification,comment,group_id,deployment_type,CASE WHEN petitions.last_edited IS NOT NULL THEN petitions.last_edited ELSE service_state.last_edited END,outdated FROM  (SELECT id AS service_id,service_description,logo_uri,service_name,deleted,requester,integration_environment,group_id FROM service_details WHERE tenant='egi'   ) AS service_details LEFT JOIN (SELECT id AS group_id,true AS owned,CASE WHEN group_manager IS NULL then false ELSE group_manager END FROM groups LEFT JOIN group_subs ON groups.id=group_subs.group_id WHERE sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu') AS group_ids USING (group_id) RIGHT JOIN service_state as service_state ON service_details.service_id=service_state.id  LEFT JOIN (SELECT id AS petition_id,status,type, service_id,comment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,last_edited FROM service_petition_details WHERE reviewed_at IS NULL) AS petitions USING (service_id) WHERE deleted=false  UNION SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu' THEN true ELSE false END AS owned,status,type,state,CASE WHEN group_manager IS NULL THEN false ELSE group_manager END,notification,comment,petitions.group_id,deployment_type,last_edited,outdated FROM (SELECT service_id,id AS petition_id,comment,service_description,logo_uri,service_name,integration_environment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,status,type,null AS deployment_type,null AS state,group_id,last_edited,false as outdated FROM service_petition_details WHERE reviewed_at IS NULL AND type='create' AND tenant='egi'    ) as petitions LEFT JOIN group_subs ON petitions.group_id= group_subs.group_id AND group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu'  ) as bar ORDER BY last_edited DESC LIMIT 10 OFFSET 0 ) AS foo GrOup By full_count,outdated_count

14:48:43 error: column "bar.service_id" must appear in the GROUP BY clause or be used in an aggregate function
         query: SELECT json_agg(json_build_object('outdated',foo.outdated,'service_id',foo.service_id,'petition_id',foo.petition_id,'service_name',foo.service_name,'service_description',foo.service_description,'logo_uri',foo.logo_uri,'integration_environment',foo.integration_environment,'owned',foo.owned,'status',foo.status,'type',foo.type,'state',foo.state,'group_manager',foo.group_manager,'notification',foo.notification,'comment',foo.comment,'group_id',foo.group_id,'deployment_type',foo.deployment_type,'last_edited',foo.last_edited)) as list_items, full_count,outdated_count FROM ( SELECT *,COUNT(*) OVER() As full_count,COUNT(case when outdated=true AND petition_id IS NULL AND bar.owned then 1 else null end ) OVER() as outdated_count,COUNT(case when status='request_review' then 1 else null end ) as request_review_count FROM ( SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN owned IS NULL THEN false ELSE owned END,status,type,state,CASE WHEN group_manager IS NULL then false ELSE group_manager END,CASE WHEN notification IS NULL THEN false ELSE notification END AS notification,comment,group_id,deployment_type,CASE WHEN petitions.last_edited IS NOT NULL THEN petitions.last_edited ELSE service_state.last_edited END,outdated FROM  (SELECT id AS service_id,service_description,logo_uri,service_name,deleted,requester,integration_environment,group_id FROM service_details WHERE tenant='egi'   ) AS service_details LEFT JOIN (SELECT id AS group_id,true AS owned,CASE WHEN group_manager IS NULL then false ELSE group_manager END FROM groups LEFT JOIN group_subs ON groups.id=group_subs.group_id WHERE sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu') AS group_ids USING (group_id) RIGHT JOIN service_state as service_state ON service_details.service_id=service_state.id  LEFT JOIN (SELECT id AS petition_id,status,type, service_id,comment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,last_edited FROM service_petition_details WHERE reviewed_at IS NULL) AS petitions USING (service_id) WHERE deleted=false  UNION SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu' THEN true ELSE false END AS owned,status,type,state,CASE WHEN group_manager IS NULL THEN false ELSE group_manager END,notification,comment,petitions.group_id,deployment_type,last_edited,outdated FROM (SELECT service_id,id AS petition_id,comment,service_description,logo_uri,service_name,integration_environment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,status,type,null AS deployment_type,null AS state,group_id,last_edited,false as outdated FROM service_petition_details WHERE reviewed_at IS NULL AND type='create' AND tenant='egi'    ) as petitions LEFT JOIN group_subs ON petitions.group_id= group_subs.group_id AND group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu'  ) as bar ORDER BY last_edited DESC LIMIT 10 OFFSET 0 ) AS foo GrOup By full_count,outdated_count

14:49:57 error: column "bar.service_id" must appear in the GROUP BY clause or be used in an aggregate function
         query: SELECT json_agg(json_build_object('outdated',foo.outdated,'service_id',foo.service_id,'petition_id',foo.petition_id,'service_name',foo.service_name,'service_description',foo.service_description,'logo_uri',foo.logo_uri,'integration_environment',foo.integration_environment,'owned',foo.owned,'status',foo.status,'type',foo.type,'state',foo.state,'group_manager',foo.group_manager,'notification',foo.notification,'comment',foo.comment,'group_id',foo.group_id,'deployment_type',foo.deployment_type,'last_edited',foo.last_edited)) as list_items, full_count,outdated_count FROM ( SELECT *,COUNT(*) OVER() As full_count,COUNT(case when outdated=true AND petition_id IS NULL AND bar.owned then 1 else null end ) OVER() as outdated_count,COUNT(case when status='request_review' then 1 else null end ) as request_review_count FROM ( SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN owned IS NULL THEN false ELSE owned END,status,type,state,CASE WHEN group_manager IS NULL then false ELSE group_manager END,CASE WHEN notification IS NULL THEN false ELSE notification END AS notification,comment,group_id,deployment_type,CASE WHEN petitions.last_edited IS NOT NULL THEN petitions.last_edited ELSE service_state.last_edited END,outdated FROM  (SELECT id AS service_id,service_description,logo_uri,service_name,deleted,requester,integration_environment,group_id FROM service_details WHERE tenant='egi'   ) AS service_details LEFT JOIN (SELECT id AS group_id,true AS owned,CASE WHEN group_manager IS NULL then false ELSE group_manager END FROM groups LEFT JOIN group_subs ON groups.id=group_subs.group_id WHERE sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu') AS group_ids USING (group_id) RIGHT JOIN service_state as service_state ON service_details.service_id=service_state.id  LEFT JOIN (SELECT id AS petition_id,status,type, service_id,comment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,last_edited FROM service_petition_details WHERE reviewed_at IS NULL) AS petitions USING (service_id) WHERE deleted=false  UNION SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu' THEN true ELSE false END AS owned,status,type,state,CASE WHEN group_manager IS NULL THEN false ELSE group_manager END,notification,comment,petitions.group_id,deployment_type,last_edited,outdated FROM (SELECT service_id,id AS petition_id,comment,service_description,logo_uri,service_name,integration_environment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,status,type,null AS deployment_type,null AS state,group_id,last_edited,false as outdated FROM service_petition_details WHERE reviewed_at IS NULL AND type='create' AND tenant='egi'    ) as petitions LEFT JOIN group_subs ON petitions.group_id= group_subs.group_id AND group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu'  ) as bar ORDER BY last_edited DESC LIMIT 10 OFFSET 0 ) AS foo GrOup By full_count,outdated_count,request_review_count

14:50:37 error: column "bar.service_id" must appear in the GROUP BY clause or be used in an aggregate function
         query: SELECT json_agg(json_build_object('outdated',foo.outdated,'service_id',foo.service_id,'petition_id',foo.petition_id,'service_name',foo.service_name,'service_description',foo.service_description,'logo_uri',foo.logo_uri,'integration_environment',foo.integration_environment,'owned',foo.owned,'status',foo.status,'type',foo.type,'state',foo.state,'group_manager',foo.group_manager,'notification',foo.notification,'comment',foo.comment,'group_id',foo.group_id,'deployment_type',foo.deployment_type,'last_edited',foo.last_edited)) as list_items, full_count,outdated_count FROM ( SELECT *,COUNT(*) OVER() As full_count,COUNT(case when outdated=true AND petition_id IS NULL AND bar.owned then 1 else null end ) OVER() as outdated_count,COUNT(case when status='request_review' then 1 else null end ) as request_review_count FROM ( SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN owned IS NULL THEN false ELSE owned END,status,type,state,CASE WHEN group_manager IS NULL then false ELSE group_manager END,CASE WHEN notification IS NULL THEN false ELSE notification END AS notification,comment,group_id,deployment_type,CASE WHEN petitions.last_edited IS NOT NULL THEN petitions.last_edited ELSE service_state.last_edited END,outdated FROM  (SELECT id AS service_id,service_description,logo_uri,service_name,deleted,requester,integration_environment,group_id FROM service_details WHERE tenant='egi'   ) AS service_details LEFT JOIN (SELECT id AS group_id,true AS owned,CASE WHEN group_manager IS NULL then false ELSE group_manager END FROM groups LEFT JOIN group_subs ON groups.id=group_subs.group_id WHERE sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu') AS group_ids USING (group_id) RIGHT JOIN service_state as service_state ON service_details.service_id=service_state.id  LEFT JOIN (SELECT id AS petition_id,status,type, service_id,comment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,last_edited FROM service_petition_details WHERE reviewed_at IS NULL) AS petitions USING (service_id) WHERE deleted=false  UNION SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu' THEN true ELSE false END AS owned,status,type,state,CASE WHEN group_manager IS NULL THEN false ELSE group_manager END,notification,comment,petitions.group_id,deployment_type,last_edited,outdated FROM (SELECT service_id,id AS petition_id,comment,service_description,logo_uri,service_name,integration_environment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,status,type,null AS deployment_type,null AS state,group_id,last_edited,false as outdated FROM service_petition_details WHERE reviewed_at IS NULL AND type='create' AND tenant='egi'    ) as petitions LEFT JOIN group_subs ON petitions.group_id= group_subs.group_id AND group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu'  ) as bar ORDER BY last_edited DESC LIMIT 10 OFFSET 0 ) AS foo GrOup By full_count,outdated_count,request_review_count

14:58:48 error: subquery in FROM must have an alias
         query: SELECT json_agg(json_build_object('outdated',foo.outdated,'service_id',foo.service_id,'petition_id',foo.petition_id,'service_name',foo.service_name,'service_description',foo.service_description,'logo_uri',foo.logo_uri,'integration_environment',foo.integration_environment,'owned',foo.owned,'status',foo.status,'type',foo.type,'state',foo.state,'group_manager',foo.group_manager,'notification',foo.notification,'comment',foo.comment,'group_id',foo.group_id,'deployment_type',foo.deployment_type,'last_edited',foo.last_edited)) as list_items, full_count,outdated_count,request_review_count FROM ( SELECT *,COUNT(*) OVER() As full_count,COUNT(case when outdated=true AND petition_id IS NULL AND bar.owned then 1 else null end ) OVER() as outdated_count,COUNT(case when status='request_review' then 1 else null end ) OVER() as request_review_count FROM ( SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN owned IS NULL THEN false ELSE owned END,status,type,state,CASE WHEN group_manager IS NULL then false ELSE group_manager END,CASE WHEN notification IS NULL THEN false ELSE notification END AS notification,comment,group_id,deployment_type,CASE WHEN petitions.last_edited IS NOT NULL THEN petitions.last_edited ELSE service_state.last_edited END,outdated FROM  (SELECT id AS service_id,service_description,logo_uri,service_name,deleted,requester,integration_environment,group_id FROM service_details WHERE tenant='egi'   ) AS service_details LEFT JOIN (SELECT id AS group_id,true AS owned,CASE WHEN group_manager IS NULL then false ELSE group_manager END FROM groups LEFT JOIN group_subs ON groups.id=group_subs.group_id WHERE sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu') AS group_ids USING (group_id) RIGHT JOIN service_state as service_state ON service_details.service_id=service_state.id  LEFT JOIN (SELECT id AS petition_id,status,type, service_id,comment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,last_edited FROM service_petition_details WHERE reviewed_at IS NULL) AS petitions USING (service_id) WHERE deleted=false  AND status='request_review' UNION SELECT service_id,petition_id,service_description,logo_uri,service_name,integration_environment,CASE WHEN group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu' THEN true ELSE false END AS owned,status,type,state,CASE WHEN group_manager IS NULL THEN false ELSE group_manager END,notification,comment,petitions.group_id,deployment_type,last_edited,outdated FROM (SELECT service_id,id AS petition_id,comment,service_description,logo_uri,service_name,integration_environment,CASE WHEN service_petition_details.comment IS NOT NULL THEN true ELSE false END AS notification,status,type,null AS deployment_type,null AS state,group_id,last_edited,false as outdated FROM service_petition_details WHERE reviewed_at IS NULL AND type='create' AND tenant='egi'    ) AND status='request_review' as petitions LEFT JOIN group_subs ON petitions.group_id= group_subs.group_id AND group_subs.sub='7a6ae5617ea76389401e3c3839127fd2a019572066d40c5d0176bd242651f934@egi.eu'  ) as bar ORDER BY last_edited DESC LIMIT 10 OFFSET 0 ) AS foo GrOup By full_count,outdated_count,request_review_count